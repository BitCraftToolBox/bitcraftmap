import matplotlib.pyplot as plt
import numpy as np
from matplotlib.patches import RegularPolygon
import matplotlib.colors as mcolors

n_hex_x = 32
n_hex_y = 32
hex_radius = 1  # size of hexagon

# Pointy-topped hexagon dimensions
hex_height = 2 * hex_radius
hex_width = np.sqrt(3) * hex_radius

fig, ax = plt.subplots(figsize=(8, 8))

# Generate some sample values for each hex cell


biomes
biomes_simple = [1 if x == 2817 else 11 if x == 267 else x for x in biomes]



biomes_32 = [biomes_simple[i*32:(i+1)*32] for i in range(32)]
values = np.array(biomes_32)

hex_colors = [
    "#FF0000",
    "#767B6C",
    "#767B6C",
    "#B2C791", 
    "#B2C791",
    "#B2C791",
    "#B2C791",
    "#B2C791",
    "#B2C791",
    "#B2C791",
    "#B2C791", 
    "#B2C791",
    "#B2C791",
    "#B2C791",
    "#B2C791",
    "#B2C791"
]


for row in range(n_hex_y):
    for col in range(n_hex_x):
        # Calculate hex center x, y for pointy-topped hexagons
        x = col * hex_width
        y = row * (hex_height * 3/4)
        if row % 2 == 1:
            x += hex_width / 2  # offset every other row horizontally for pointy-topped

        val = values[row, col]
        color = hex_colors[val]  # pick color from your hex array

        # Draw hexagon (no rotation needed for pointy-topped)
        hexagon = RegularPolygon(
            (x, y), numVertices=6, radius=hex_radius,
            orientation=0,  # 0 degrees rotation => pointy-topped
            facecolor=color, edgecolor='none'
        )
        ax.add_patch(hexagon)

        # Place value text inside hex
        ax.text(x, y, str(values[row, col]), ha='center', va='center', fontsize=10)

# Set limits to avoid trimming
ax.set_xlim(-hex_width / 2, hex_width * (n_hex_x + 0.5))
ax.set_ylim(-hex_radius, hex_height * (n_hex_y * 3/4 + 0.25))

ax.set_aspect('equal')
ax.axis('off')

plt.show()